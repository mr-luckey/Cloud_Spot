def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    // throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// def keystoreProperties = new Properties()
// def keystorePropertiesFile = rootProject.file('key.properties')
// if (keystorePropertiesFile.exists()) {
//     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// }

android {
    compileSdkVersion 34
    ndkVersion "21.4.7075529"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.appware.cloudSpot"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 29
        // multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
   buildTypes {
       release {
           // TODO: Add your own signing config for the release build.
           // Signing with the debug keys for now,
           // so `flutter run --release` works.
           signingConfig signingConfigs.debug
        //    shrinkResources false
       }
   }

    // remove signingConfigs when running debug version
    // signingConfigs {
    //     release {
    //         storeFile file(keystoreProperties['storeFile'])
    //         storePassword keystoreProperties['storePassword']
    //         keyAlias keystoreProperties['keyAlias']
    //         keyPassword keystoreProperties['keyPassword']
    //         v1SigningEnabled true
    //         v2SigningEnabled true
    //     }
    // }

    // buildTypes {
    //     // replace release with "debug" when running on debug version
    //     release {
    //         // TODO: Add your own signing config for the release build.
    //         // replace with "debug" when running on debug version
    //         signingConfig signingConfigs.release
    //         shrinkResources false
    //     }
    // }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    buildFeatures {
        viewBinding true
    }
}

flutter {
    source '../..'
}

dependencies {
    // implementation 'com.android.tools.build:gradle:3.4.2'
    implementation 'com.google.android.gms:play-services-measurement-api:17.2.2' 
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation'com.google.android.gms:play-services-measurement:20.1.2' 
//     {
//     exclude group: 'com.google.android.gms', module: 'play-services-measurement-base'
// }

    // implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    
    // implementation platform('com.google.firebase:firebase-bom:30.1.0')
}
